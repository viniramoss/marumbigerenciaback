################################################################################
# Identificação do serviço
################################################################################
spring.application.name = marumbi-backend

################################################################################
# DataSource – SQLite (arquivo local)
################################################################################
# Caminho relativo ao diretório onde você roda o jar.  Pode trocar por caminho
# absoluto se preferir, mas use sempre barra normal (/) para evitar escape.
# Conexão com PostgreSQL no Railway
spring.datasource.url=jdbc:postgresql://postgres.railway.internal:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=ofjYLQLWvYvxjXHwTXUlVyAnnGwuIDsC
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP – teste de conexão (impede status DOWN por validação)
spring.datasource.hikari.connection-test-query = SELECT 1
# Não aborta o startup se o primeiro teste falhar (útil em dev)
spring.datasource.hikari.initializationFailTimeout = 0

################################################################################
# Hibernate / JPA
################################################################################
# Hibernate / JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
################################################################################
# Spring Boot Actuator
################################################################################
# Expor todos os endpoints via HTTP  (health, metrics, env, etc.)
management.endpoints.web.exposure.include = *
# Sempre mostrar detalhes (útil em dev; em prod prefira "when_authorized")
management.endpoint.health.show-details   = always
# Caso queira ignorar o health do banco em dev, descomente:
# management.health.db.enabled            = false
server.port=${PORT}