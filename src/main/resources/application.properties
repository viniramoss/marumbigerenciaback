# Server Configuration
server.port=${PORT:8080}
server.shutdown=graceful

# PostgreSQL Configuration using Railway Environment Variables
spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
spring.datasource.username=${PGUSER}
spring.datasource.password=${PGPASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection pool configuration for Railway
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=America/Sao_Paulo

# Logging Configuration
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.web=INFO
logging.level.com.example.railway_postgres_app=INFO

# Actuator Configuration (para healthcheck)
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Timeout configurations
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=15000

# Disable Spring Boot banner to reduce startup logs
spring.main.banner-mode=off

# Graceful shutdown configuration
spring.lifecycle.timeout-per-shutdown-phase=30s